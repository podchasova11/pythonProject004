"""
-*- coding: utf-8 -*-
@Time    : 2024/09/05 20:47 GMT+3
@Author  : podchasova11
"""
from datetime import datetime

import allure

from pages.base_page import BasePage
from selenium.webdriver.support.ui import WebDriverWait as Wait
from selenium.webdriver.support import expected_conditions as EC

from pages.common import Common

HOW_TO_GUIDES_LOC = ('css selector', 'div.grid.gSm > div:nth-child(2) > div > div > a')
ERROR_PAGE_DISPLAYED_LOC = ('css selector', '#main-content > div > section div > h1')
ERROR_PAGE_SCB_LICENSE_DISPLAYED_LOC = ('css selector', 'main :nth-child(2) > h1')


class Bug350(BasePage):
    def click_how_to_guides_link(self):
        print(f'\n{datetime.now()}   Click the [How-to guides] link =>')
        element = Wait(self.driver, 2).until(EC.element_to_be_clickable(HOW_TO_GUIDES_LOC))
        self.driver.execute_script(
            'return arguments[0].scrollIntoView({block: "center", inline: "nearest"});',
            element
        )
        element.click()
        allure.attach(self.driver.get_screenshot_as_png(), "scr_qr", allure.attachment_type.PNG)
        print(f'{datetime.now()}   => Done, the link is clicked')
        print(f'{datetime.now()}   => Current URL: {self.driver.current_url}')

    def should_be_how_to_guides_page(self):
        print(f'\n{datetime.now()}   Check that Corresponding web page with resource is opened => ')
        if self.driver.find_element(*ERROR_PAGE_DISPLAYED_LOC):
            print(f'{datetime.now()}   => ERROR')
            return False
        print(f'{datetime.now()}   => No errors')
        return True
        # print(f'{datetime.now()}   Current page is: {self.driver.current_url}')

        # actual_page_title = self.driver.title
        # print(f"{datetime.now()}   actual_page_title is '{actual_page_title}'")
        # expected_page_title_contain = "Help Center"
        # if expected_page_title_contain in actual_page_title:
        #     print(f"{datetime.now()}   The Corresponding web page with resource  is opened")
        # else:
        #     Common.pytest_fail(f"#Bug # 55!350 "
        #                        f"\n"
        #                        f"Expected result: The Corresponding web page with resource  is opened"
        #                        f"\n"
        #                        f"Actual result: Error message is displayed after clicking the link [How-to guides]")
    
    def should_be_how_to_guides_page_scb_license(self):
        
        if self.driver.find_element(*ERROR_PAGE_SCB_LICENSE_DISPLAYED_LOC):
            print(f'{datetime.now()}   => ERROR')
            return False
        print(f'{datetime.now()}   => No errors')
        return True
