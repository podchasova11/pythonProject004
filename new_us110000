import pytest
import allure
from datetime import datetime

from pages.Elements.ButtonStartTradingMainBanner import MainBannerStartTrading
from pages.Menu.menu import MenuSection
from pages.common import Common
from pages.conditions import Conditions
from src.src import CapitalComPageSrc
from tests.build_dynamic_arg import build_dynamic_arg_v4


@pytest.fixture()
def cur_time():
    return str(datetime.now())


@pytest.mark.us_11_00_00
class TestLearnToTrade:
    page_conditions = None

    @allure.step("Start test of button [Open an account] on the Main banner")
    @pytest.mark.test_01
    def test_01_button_open_an_account(
            self, worker_id, d, cur_language, cur_country, cur_role, cur_login, cur_password):
        """
        Check: Button [Open an account]
        Language: En. License: FCA.
        """

        bid = build_dynamic_arg_v4(
            d, worker_id, cur_language, cur_country, cur_role,
            "11.00.00", "Learn to trade",
            ".01", "Testing button [Open an account] on the Main banner 'Learn to trade'")

        Common().check_country_in_list_and_skip_if_not_present(cur_country, ["gb"])
        Common().check_language_in_list_and_skip_if_not_present(cur_language, [""])

        page_conditions = Conditions(d, "")
        link = page_conditions.preconditions(
            d, CapitalComPageSrc.URL, "", cur_language, cur_country, cur_role, cur_login, cur_password)

        page_menu = MenuSection(d, link)
        page_menu.menu_education_move_focus(d, cur_language, cur_country)
        cur_page_url = page_menu.sub_menu_trend_trading_move_focus_click(d, cur_language)

        test_element = MainBannerStartTrading(d, cur_page_url, bid)
        test_element.full_test_with_tpi(d, cur_language, cur_country, cur_role, cur_page_url)
